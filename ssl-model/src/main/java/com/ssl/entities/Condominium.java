package com.ssl.entities;

import java.io.Serializable;

// Generated 28/02/2017 22:40:44 by Hibernate Tools 5.2.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Condominium generated by hbm2java
 */
@Entity
@Table(name = "condominium", schema = "dbo")
@DynamicInsert
@DynamicUpdate
public class Condominium implements Serializable
{

    /**
     * 
     */
    private static final long serialVersionUID = -5940595036721461991L;

    private int id;
    private String name;
    private Boolean active = true;
    private Set<Employee> employees = new HashSet<Employee>(0);
    private Set<Visitor> visitors = new HashSet<Visitor>(0);
    private Set<Userr> userrs = new HashSet<Userr>(0);
    private CondominiumAddress condominiumAddress;
    private Set<ScheduledVisit> scheduledVisits = new HashSet<ScheduledVisit>(0);
    private Set<AutenticationHistory> autenticationHistories = new HashSet<AutenticationHistory>(0);
    private Set<PhoneNumberCondominium> phoneNumberCondominiums = new HashSet<PhoneNumberCondominium>(0);

    public Condominium()
    {
    }

    public Condominium(int id, String name)
    {
        this.id = id;
        this.name = name;
    }

    public Condominium(int id, String name, Boolean active, Set<Employee> employees, Set<Visitor> visitors,
            Set<Userr> userrs, CondominiumAddress condominiumAddresses, Set<ScheduledVisit> scheduledVisits,
            Set<AutenticationHistory> autenticationHistories, Set<PhoneNumberCondominium> phoneNumberCondominiums)
    {
        this.id = id;
        this.name = name;
        this.active = active;
        this.employees = employees;
        this.visitors = visitors;
        this.userrs = userrs;
        this.condominiumAddress = condominiumAddresses;
        this.scheduledVisits = scheduledVisits;
        this.autenticationHistories = autenticationHistories;
        this.phoneNumberCondominiums = phoneNumberCondominiums;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId()
    {
        return this.id;
    }

    public void setId(int id)
    {
        this.id = id;
    }

    @Column(name = "name", nullable = false)
    public String getName()
    {
        return this.name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    @Column(name = "active")
    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "condominium")
    public Set<Employee> getEmployees()
    {
        return this.employees;
    }

    public void setEmployees(Set<Employee> employees)
    {
        this.employees = employees;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "condominium")
    public Set<Visitor> getVisitors()
    {
        return this.visitors;
    }

    public void setVisitors(Set<Visitor> visitors)
    {
        this.visitors = visitors;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "condominium")
    public Set<Userr> getUserrs()
    {
        return this.userrs;
    }

    public void setUserrs(Set<Userr> userrs)
    {
        this.userrs = userrs;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "condominium", cascade=CascadeType.ALL)
    public CondominiumAddress getCondominiumAddress()
    {
        return this.condominiumAddress;
    }

    public void setCondominiumAddress(CondominiumAddress condominiumAddresses)
    {
        this.condominiumAddress = condominiumAddresses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "condominium")
    public Set<ScheduledVisit> getScheduledVisits()
    {
        return this.scheduledVisits;
    }

    public void setScheduledVisits(Set<ScheduledVisit> scheduledVisits)
    {
        this.scheduledVisits = scheduledVisits;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "condominium")
    public Set<AutenticationHistory> getAutenticationHistories()
    {
        return this.autenticationHistories;
    }

    public void setAutenticationHistories(Set<AutenticationHistory> autenticationHistories)
    {
        this.autenticationHistories = autenticationHistories;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "condominium")
    public Set<PhoneNumberCondominium> getPhoneNumberCondominiums()
    {
        return this.phoneNumberCondominiums;
    }

    public void setPhoneNumberCondominiums(Set<PhoneNumberCondominium> phoneNumberCondominiums)
    {
        this.phoneNumberCondominiums = phoneNumberCondominiums;
    }

}
