package com.ssl.entities;
// default package

// Generated 28/02/2017 22:40:44 by Hibernate Tools 5.2.1.Final

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.DynamicInsert;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Userr generated by hbm2java
 */
@Entity
@Table(name = "userr", schema = "dbo", uniqueConstraints = @UniqueConstraint(columnNames = "cpf"))
@DynamicInsert
@DynamicUpdate
public class Userr implements Serializable
{

    /**
     * 
     */
    private static final long serialVersionUID = 4405068494476518897L;

    private int id;
    private String name;
    private Condominium condominium;
    private String cpf;
    private String email;
    private String password;
    private String apartmentIdentifier;
    private Set<AutenticationHistory> autenticationHistories = new HashSet<AutenticationHistory>(0);
    private Set<Vehicle> vehicles = new HashSet<Vehicle>(0);
    private Set<PhoneNumberUserr> phoneNumberUserrs = new HashSet<PhoneNumberUserr>(0);
    private Set<ScheduledVisit> scheduledVisits = new HashSet<ScheduledVisit>(0);

    public Userr()
    {
    }

    public Userr(int id, String name, String cpf, String password, String email, String apartmentIdentifier)
    {
        this.id = id;
        this.name = name;
        this.cpf = cpf;
        this.email = email;
        this.password = password;
        this.apartmentIdentifier = apartmentIdentifier;
    }

    public Userr(int id, String name, Condominium condominium, String cpf, String email, String password, String apartmentIdentifier,
            Set<AutenticationHistory> autenticationHistories, Set<Vehicle> vehicles,
            Set<PhoneNumberUserr> phoneNumberUserrs, Set<ScheduledVisit> scheduledVisits)
    {
        this.id = id;
        this.name = name;
        this.condominium = condominium;
        this.cpf = cpf;
        this.password = password;
        this.email = email;
        this.apartmentIdentifier = apartmentIdentifier;
        this.autenticationHistories = autenticationHistories;
        this.vehicles = vehicles;
        this.phoneNumberUserrs = phoneNumberUserrs;
        this.scheduledVisits = scheduledVisits;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId()
    {
        return this.id;
    }

    public void setId(int id)
    {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "condominium_id")
    public Condominium getCondominium()
    {
        return this.condominium;
    }

    public void setCondominium(Condominium condominium)
    {
        this.condominium = condominium;
    }

    @Column(name = "cpf", unique = true, nullable = false)
    public String getCpf()
    {
        return this.cpf;
    }

    public void setCpf(String cpf)
    {
        this.cpf = cpf;
    }

    @Column(name = "email", nullable = false)
    public String getEmail()
    {
        return this.email;
    }

    public void setEmail(String email)
    {
        this.email = email;
    }
    
    @Column(name = "password", nullable = false)
    public String getPassword()
    {
        return this.password;
    }

    public void setPassword(String password)
    {
        this.password = password;
    }

    @Column(name = "name", nullable = false)
    public String getName()
    {
        return this.name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    @Column(name = "apartment_identifier", nullable = false)
    public String getApartmentIdentifier()
    {
        return this.apartmentIdentifier;
    }

    public void setApartmentIdentifier(String apartmentIdentifier)
    {
        this.apartmentIdentifier = apartmentIdentifier;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userr", cascade = CascadeType.ALL)
    public Set<AutenticationHistory> getAutenticationHistories()
    {
        return this.autenticationHistories;
    }

    public void setAutenticationHistories(Set<AutenticationHistory> autenticationHistories)
    {
        this.autenticationHistories = autenticationHistories;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userr", cascade = CascadeType.ALL)
    public Set<Vehicle> getVehicles()
    {
        return this.vehicles;
    }

    public void setVehicles(Set<Vehicle> vehicles)
    {
        this.vehicles = vehicles;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userr", cascade = CascadeType.ALL)
    public Set<PhoneNumberUserr> getPhoneNumberUserrs()
    {
        return this.phoneNumberUserrs;
    }

    public void setPhoneNumberUserrs(Set<PhoneNumberUserr> phoneNumberUserrs)
    {
        this.phoneNumberUserrs = phoneNumberUserrs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "userr", cascade = CascadeType.ALL)
    public Set<ScheduledVisit> getScheduledVisits()
    {
        return this.scheduledVisits;
    }

    public void setScheduledVisits(Set<ScheduledVisit> scheduledVisits)
    {
        this.scheduledVisits = scheduledVisits;
    }

}
